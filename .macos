#!/usr/bin/env fish

# ~/.macos.fish
# System setup script
# Based on mathiasbynens's macOS script <https://mths.be/macos>

# Function to execute a command and pretty-print its success
function try -a msg
  set -l command $argv[2..]
  # If the msg is empty, print the command instead
  # Execute command
  set -l output ($command) # save stdout
  set -l cmd_status $status # save status
  if test -z $msg
    return
  end
  # Output green or red result
  if test $cmd_status -eq 0
    set_color -o brgreen
    printf "[✓] "
    set_color normal
    set_color green
    echo $msg
  else
    set_color -o brred
    printf "[X] "
    set_color normal
    set_color red
    echo $msg
  end
  # Reset color
  set_color normal
end

function heading -a msg
  echo
  set_color -o
  echo "===== $msg ====="
  set_color normal
end

alias plistbuddy /usr/libexec/PlistBuddy

if command -q figlet
  figlet -f small ". macos . fish"
else
  echo ".macos.fish"
end

# Gitignore Global
git config --global core.excludesfile ~/.gitignore_global

set_color -o red;

echo "WARNING. This script runs with admin privileges and modifies many system settings. You should probably read it before executing."

set_color normal;

# Ask for the administrator password upfront
sudo -v

# Close any open System Preferences panes, to prevent them from overriding settings we’re about to change
try 'Closing System Preferences...' osascript -e 'tell application "System Preferences" to quit'

heading "General UI/UX"

try 'Set highlight color to Purple.' \
defaults write NSGlobalDomain AppleHighlightColor -string "0.968627 0.831373 1.000000 Purple"

try 'Set accent color to Purple.' \
defaults write NSGlobalDomain AppleAccentColor -int 5

try 'Set Appearance to Dark.' \
defaults write NSGlobalDomain AppleInterfaceStyle -string "Dark"

try 'Set sidebar icon size to Medium.' \
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

try 'Show scrollbars automatically when scrolling trackpad or when using mouse' \
defaults write NSGlobalDomain AppleShowScrollBars -string "Automatic"
# # `WhenScrolling` || `Automatic` || `Always`

# See: https://imgur.com/a/SYHvSeS' \
try 'Disable the over-the-top focus ring animation.' \
defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false
try 'Increase window resize speed for Cocoa applications.' \
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001
try 'Expand save panels by default.' \
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
try '' \
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
try 'Expand print panels by default.' \
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
try '' \
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

try 'Save to disk (not to iCloud) by default' \
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

try 'Automatically quit printer app once the print jobs complete' \
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

try 'Disable the “Are you sure you want to open this application?” dialog' \
defaults write com.apple.LaunchServices LSQuarantine -bool false

try 'Display ASCII control characters using caret notation in standard text views 
Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`' \
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

# try "Disable Resume system-wide" defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false
# try "Disable automatic termination of inactive apps" defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true
# try "Disable the crash reporter" defaults write com.apple.CrashReporter DialogType -string "none"

try 'Set Help Viewer windows to non-floating mode' \
defaults write com.apple.helpviewer DevMode -bool true

# Fix for the ancient UTF-8 bug in QuickLook (https://mths.be/bbo)
# Commented out, as this is known to cause problems in various Adobe apps :(
# See https://github.com/mathiasbynens/dotfiles/issues/237
#echo "0x08000100:0" > ~/.CFUserTextEncoding

try 'Text: Disable automatic capitalization.' \
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

try 'Text: Disable smart dashes.' \
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

try 'Text: Disable automatic period substitution.' \
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# try 'Disable smart quotes' defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

try 'Text: Disable auto-correct.' \
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
# all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.
# rm -rf ~/Library/Application Support/Dock/desktoppicture.db
# sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg

heading 'Trackpad, Mouse & Bluetooth Accessories'

try 'Trackpad: Enable Tap to Click' \
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true \
&& defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\
&& defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

try 'Trackpad: map bottom right corner to right-click.' \
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2\
&& defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true\
&& defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1\
&& defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

try 'Increase sound quality for Bluetooth headphones/headsets.' \
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

heading 'Keyboard & Language'
try 'Keyboard: Enable full keyboard access for all controls.' \
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

try 'Keyboard: Disable press-and-hold for keys in favor of key repeat.' \
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

try 'Keyboard: Set key repeat delay to the fastest settings.' \
defaults write NSGlobalDomain KeyRepeat -int 2 && \
defaults write NSGlobalDomain InitialKeyRepeat -int 15

try 'Show language menu in the top right corner of the boot screen' \
sudo defaults write /Library/Preferences/com.apple.loginwindow showInputMenu -bool true

# try "Stop iTunes from responding to the keyboard media keys" launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

heading "Energy saving"

try 'Enable wakeup when system lid is opened.' \
sudo pmset -a lidwake 1

try 'Enable wakeup when connecting power sources. This is useful for docking a laptop.' \
sudo pmset -a acwake 1

try 'Restart automatically on power loss' \
sudo pmset -a autorestart 1

try 'Restart automatically if the computer freezes' \
sudo systemsetup -setrestartfreeze on

try 'Machine sleep delay (3 hours)' \
sudo pmset -c sleep 180 && \
sudo pmset -b sleep 15

try 'Set display sleep to 5 mins on battery' \
sudo pmset -c displaysleep 30 && \
sudo pmset -b displaysleep 5

try 'Set standby delay to 1 hours.' \
sudo pmset -a standbydelay 3600 #seconds

try 'Computer Sleep Mode: After 3 hours.' \
sudo systemsetup -setcomputersleep 180 > /dev/null

# Hibernation modes:
#  0: Disable hibernation (speeds up sleep and wake times)
#  3: Copy RAM to disk, so system state can be restored in case of power
#     failure (RAM remains powered) – default behavior for laptops
# 25: Store RAM on disk and depower memory (improves battery life at the cost
#     of slower sleep/wake time)
try "Hibernation Mode: On battery copy RAM to disk as backup." sudo pmset -b hibernatemode 3
try "Hibernation Mode: On charger, copy RAM to disk as backup." sudo pmset -c hibernatemode 3
# try "Hibernation Mode: On battery copy RAM to disk to save power." sudo pmset -b hibernatemode 25
# try "Hibernation Mode: On charger, disable hibernation." sudo pmset -c hibernatemode 0

heading 'Screen'

try 'Require password immediately after sleep or screen saver begins.' \
defaults write com.apple.screensaver askForPassword -int 1 && \
defaults write com.apple.screensaver askForPasswordDelay -int 5

try 'Save screenshots to the Desktop.' \
defaults write com.apple.screencapture location -string "$HOME/Desktop"

try 'Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF).' \
defaults write com.apple.screencapture type -string "png"

try 'Disable window shadows in screenshots.' \
defaults write com.apple.screencapture disable-shadow -bool true

try 'Enable subpixel font rendering on non-Apple LCDs.' defaults write NSGlobalDomain AppleFontSmoothing -int 1
# Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501

try 'Enable HiDPI display modes (requires restart).' \
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

heading 'Finder.app'

try 'Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons.' \
defaults write com.apple.finder QuitMenuItem -bool true

# PfDe (desktop) || PfHm (home) || PfLo (custom)
try 'New Finder windows start in Desktop.' defaults write com.apple.finder NewWindowTarget -string "PfDe"
# defaults write com.apple.finder NewWindowTargetPath -string "file:///custom/path/here/"

try 'Show icons for hard drives, servers, and removable media on the desktop.' \
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true && \
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true && \
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true && \
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show hidden files by default
#defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
#defaults write NSGlobalDomain AppleShowAllExtensions -bool true

try 'Finder: show status bar.' \
defaults write com.apple.finder ShowStatusBar -bool true

try 'Finder: show path bar.' \
defaults write com.apple.finder ShowPathbar -bool true

try 'Display full POSIX path as Finder window title.' \
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

try 'Keep folders on top when sorting by name.' \
defaults write com.apple.finder _FXSortFoldersFirst -bool true

try 'When performing a search, search the current folder by default.' \
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

try 'Disable the warning when changing a file extension.' \
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

try 'Enable spring loading for directories.' \
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

try 'Remove the spring loading delay for directories.' \
defaults write NSGlobalDomain com.apple.springing.delay -float 0

try 'Avoid creating .DS_Store files on network or USB volumes.' \
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true && \
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# echo 'Disable disk image verification.'
# defaults write com.apple.frameworks.diskimages skip-verify -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

try 'Automatically open a new Finder window when a volume is mounted.' \
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true && \
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true && \
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

try 'Show item info near icons on the desktop and in other icon views.' \
plistbuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

try 'Show item info to the right of the icons on the desktop.' \
plistbuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

try 'Enable snap-to-grid for icons on the desktop and in other icon views.' \
plistbuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

try 'Increase grid spacing for icons on the desktop and in other icon views.' \
plistbuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

try 'Increase the size of icons on the desktop and in other icon views.' \
plistbuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist && \
plistbuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

try 'Use list view in all Finder windows by default.' defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`

try 'Disable the warning before emptying the Trash.' \
defaults write com.apple.finder WarnOnEmptyTrash -bool false

try 'Enable AirDrop over Ethernet.' \
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

try 'Show the ~/Library folder.' chflags nohidden ~/Library

try 'Show the /Volumes folder.' \
sudo chflags nohidden /Volumes

set -l DROPBOX_EMBLEM_PATH /Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
if test -e $DROPBOX_EMBLEM_PATH
  try 'Remove Dropbox’s green checkmark icons in Finder.' \
mv -f "$DROPBOX_EMBLEM_PATH" "$DROPBOX_EMBLEM_PATH.bak"
end 

try 'Expand the following File Info panes:
“General”, “Open with”, and “Sharing & Permissions”' \
defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General -bool true \
  OpenWith -bool true \
  Privileges -bool true

heading 'Dock, Dashboard, and hot corners'

try 'Dock: Enable highlight hover effect for the grid view of a stack.' \
defaults write com.apple.dock mouse-over-hilite-stack -bool true

try 'Set the icon size of Dock items to 48 pixels.' \
defaults write com.apple.dock tilesize -int 48

try 'Change the dock minimize/maximize window effect to Scale.' \
defaults write com.apple.dock mineffect -string "scale"

# Enable slow-motion Easter Egg (hold shift while minimizing)
# defaults write com.apple.dock slow-motion-allowed -bool YES && killall Dock

try 'Minimize windows into their application’s icon.' \
defaults write com.apple.dock minimize-to-application -bool true

try 'Enable spring loading for all Dock items.' \
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

try 'Show indicator lights for open applications in the Dock.' \
defaults write com.apple.dock show-process-indicators -bool true

# Useful on MacBook Pro models with notched display
try 'Show the menu bar in full-screen applications' \
defaults write 'Apple Global Domain' AppleMenuBarVisibleInFullscreen -bool True

# Wipe all (default) app icons from the Dock
# This is only really useful when setting up a new Mac, or if you don’t use
# the Dock to launch apps.
# defaults write com.apple.dock persistent-apps -array

# Show only open applications in the Dock
# defaults write com.apple.dock static-only -bool true

# Don’t animate opening applications from the Dock
# defaults write com.apple.dock launchanim -bool false

try 'Speed up Mission Control animations.' \
defaults write com.apple.dock expose-animation-duration -float 0.1

try 'Do not group windows by application in Mission Control (i.e. use the old Exposé behavior instead).' \
defaults write com.apple.dock expose-group-by-app -bool false

try 'Remove the delay when hiding/showing the Dock.' \
defaults write com.apple.dock autohide-delay -float 0
try 'Speed up the animation when hiding/showing the Dock.' \
defaults write com.apple.dock autohide-time-modifier -float 0.5

# try 'Automatically hide and show the Dock.' \
# defaults write com.apple.dock autohide -bool true

try 'Make Dock icons of hidden applications translucent.' \
defaults write com.apple.dock showhidden -bool true

try 'Don’t show recent applications in Dock.' \
defaults write com.apple.dock show-recents -bool false

# Reset Launchpad, but keep the desktop wallpaper intact
# find "$HOME/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete

# Add a spacer to the left side of the Dock (where the applications are)
#defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
# Add a spacer to the right side of the Dock (where the Trash is)
#defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'

# Hot corners
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center
# 13: Lock Screen
try 'Top left screen corner → Mission Control.' \
defaults write com.apple.dock wvous-tl-corner -int 2  && \
defaults write com.apple.dock wvous-tl-modifier -int 0
try 'Top right screen corner → Misson Control.' \
defaults write com.apple.dock wvous-tr-corner -int 2 && \
defaults write com.apple.dock wvous-tr-modifier -int 0
try 'Bottom left screen corner → None.' \
defaults write com.apple.dock wvous-bl-corner -int 0 && \
defaults write com.apple.dock wvous-bl-modifier -int 0
try 'Bottom right screen corner → None.' \
defaults write com.apple.dock wvous-br-corner -int 0 && \
defaults write com.apple.dock wvous-br-modifier -int 0

heading 'Terminal.app & iTerm 2'

try 'Only use UTF-8 in Terminal.app.' \
defaults write com.apple.terminal StringEncodings -array 4

if test -d ~/iTerm.app
  if test -d ~/.dotfiles/etc/iterm2
    try 'iTerm2: Use custom config.' defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder -bool true
    defaults write com.googlecode.iterm2 PrefsCustomFolder "~/.dotfiles/etc/iterm2"
  end
  if not find ~/.iterm2_shell_integration* > /dev/null
    try 'Install iTerm2 shell integration...' curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | bash
  end
end

heading 'Time Machine'

try 'Prevent Time Machine from prompting to use new hard drives as backup volume.' \
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

heading 'Activity Monitor'

try 'Show the main window when launching Activity Monitor.' \
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

try 'Visualize CPU usage in the Activity Monitor Dock icon.' \
defaults write com.apple.ActivityMonitor IconType -int 5

try 'Show all processes in Activity Monitor.' \
defaults write com.apple.ActivityMonitor ShowCategory -int 0

try 'Sort Activity Monitor results by CPU usage.' \
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage" && \
defaults write com.apple.ActivityMonitor SortDirection -int 0

heading 'App Store'

try 'Enable the automatic update check.' \
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

try 'Check for software updates daily, not just once per week.' \
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

try 'Download newly available updates in background.' \
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

try 'Install System data files & security updates.' \
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

try 'Automatically download apps purchased on other Macs.' \
defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

try 'Turn on app auto-update.' \
defaults write com.apple.commerce AutoUpdate -bool true

try 'Allow the App Store to reboot machine on macOS updates.' \
defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

heading 'Photos'

try 'Prevent Photos from opening automatically when devices are plugged in.' \
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

heading 'Kill affected applications...'

for app in \
  "SystemUIServer" \
  "Finder" \
  "Dock" \
  "System Preferences" \
  "System Settings" \
  "Activity Monitor" \
  "Address Book" \
  "Calendar" \
  "cfprefsd" \
  "Contacts" \
  "Google Chrome" \
  "Google Chrome Canary" \
  "Mail" \
  "Messages" \
  "Opera" \
  "Photos" \
  "Safari" \
  "SizeUp" \
  "Spectacle" \
  "Terminal" \
  "Transmission" \
  "Tweetbot" \
  "Twitter" \
  "iCal";
  # check if running
  if killall -s $app &> /dev/null
    try "Killing $app" killall $app 2> /dev/null
  end
end
echo "Done. Note that some of these changes require a logout/restart to take effect."

